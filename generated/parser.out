Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Grammar

Rule 0     S' -> programme
Rule 1     programme -> statement NEWLINE
Rule 2     programme -> statement NEWLINE programme
Rule 3     statement -> expression SEMICOLON
Rule 4     expression -> AUTHOR PARANTHESIS_OPEN IDENTIFIER PARANTHESIS_CLOSE
Rule 5     expression -> DATE PARANTHESIS_OPEN IDENTIFIER PARANTHESIS_CLOSE
Rule 6     expression -> TITLE PARANTHESIS_OPEN IDENTIFIER PARANTHESIS_CLOSE
Rule 7     expression -> IMG PARANTHESIS_OPEN IDENTIFIER PARANTHESIS_CLOSE
Rule 8     expression -> S PARANTHESIS_OPEN IDENTIFIER PARANTHESIS_CLOSE
Rule 9     expression -> SS PARANTHESIS_OPEN IDENTIFIER PARANTHESIS_CLOSE
Rule 10    expression -> C PARANTHESIS_OPEN IDENTIFIER PARANTHESIS_CLOSE
Rule 11    expression -> MARGE PARANTHESIS_OPEN IDENTIFIER PARANTHESIS_CLOSE
Rule 12    expression -> FILENAME PARANTHESIS_OPEN IDENTIFIER PARANTHESIS_CLOSE

Terminals, with rules where they appear

AUTHOR               : 4
C                    : 10
DATE                 : 5
FILENAME             : 12
IDENTIFIER           : 4 5 6 7 8 9 10 11 12
IMG                  : 7
MARGE                : 11
NEWLINE              : 1 2
PARANTHESIS_CLOSE    : 4 5 6 7 8 9 10 11 12
PARANTHESIS_OPEN     : 4 5 6 7 8 9 10 11 12
S                    : 8
SEMICOLON            : 3
SS                   : 9
TITLE                : 6
error                : 

Nonterminals, with rules where they appear

expression           : 3
programme            : 2 0
statement            : 1 2

Parsing method: LALR

state 0

    (0) S' -> . programme
    (1) programme -> . statement NEWLINE
    (2) programme -> . statement NEWLINE programme
    (3) statement -> . expression SEMICOLON
    (4) expression -> . AUTHOR PARANTHESIS_OPEN IDENTIFIER PARANTHESIS_CLOSE
    (5) expression -> . DATE PARANTHESIS_OPEN IDENTIFIER PARANTHESIS_CLOSE
    (6) expression -> . TITLE PARANTHESIS_OPEN IDENTIFIER PARANTHESIS_CLOSE
    (7) expression -> . IMG PARANTHESIS_OPEN IDENTIFIER PARANTHESIS_CLOSE
    (8) expression -> . S PARANTHESIS_OPEN IDENTIFIER PARANTHESIS_CLOSE
    (9) expression -> . SS PARANTHESIS_OPEN IDENTIFIER PARANTHESIS_CLOSE
    (10) expression -> . C PARANTHESIS_OPEN IDENTIFIER PARANTHESIS_CLOSE
    (11) expression -> . MARGE PARANTHESIS_OPEN IDENTIFIER PARANTHESIS_CLOSE
    (12) expression -> . FILENAME PARANTHESIS_OPEN IDENTIFIER PARANTHESIS_CLOSE

    AUTHOR          shift and go to state 4
    DATE            shift and go to state 5
    TITLE           shift and go to state 6
    IMG             shift and go to state 7
    S               shift and go to state 8
    SS              shift and go to state 9
    C               shift and go to state 10
    MARGE           shift and go to state 11
    FILENAME        shift and go to state 12

    programme                      shift and go to state 1
    statement                      shift and go to state 2
    expression                     shift and go to state 3

state 1

    (0) S' -> programme .



state 2

    (1) programme -> statement . NEWLINE
    (2) programme -> statement . NEWLINE programme

    NEWLINE         shift and go to state 13


state 3

    (3) statement -> expression . SEMICOLON

    SEMICOLON       shift and go to state 14


state 4

    (4) expression -> AUTHOR . PARANTHESIS_OPEN IDENTIFIER PARANTHESIS_CLOSE

    PARANTHESIS_OPEN shift and go to state 15


state 5

    (5) expression -> DATE . PARANTHESIS_OPEN IDENTIFIER PARANTHESIS_CLOSE

    PARANTHESIS_OPEN shift and go to state 16


state 6

    (6) expression -> TITLE . PARANTHESIS_OPEN IDENTIFIER PARANTHESIS_CLOSE

    PARANTHESIS_OPEN shift and go to state 17


state 7

    (7) expression -> IMG . PARANTHESIS_OPEN IDENTIFIER PARANTHESIS_CLOSE

    PARANTHESIS_OPEN shift and go to state 18


state 8

    (8) expression -> S . PARANTHESIS_OPEN IDENTIFIER PARANTHESIS_CLOSE

    PARANTHESIS_OPEN shift and go to state 19


state 9

    (9) expression -> SS . PARANTHESIS_OPEN IDENTIFIER PARANTHESIS_CLOSE

    PARANTHESIS_OPEN shift and go to state 20


state 10

    (10) expression -> C . PARANTHESIS_OPEN IDENTIFIER PARANTHESIS_CLOSE

    PARANTHESIS_OPEN shift and go to state 21


state 11

    (11) expression -> MARGE . PARANTHESIS_OPEN IDENTIFIER PARANTHESIS_CLOSE

    PARANTHESIS_OPEN shift and go to state 22


state 12

    (12) expression -> FILENAME . PARANTHESIS_OPEN IDENTIFIER PARANTHESIS_CLOSE

    PARANTHESIS_OPEN shift and go to state 23


state 13

    (1) programme -> statement NEWLINE .
    (2) programme -> statement NEWLINE . programme
    (1) programme -> . statement NEWLINE
    (2) programme -> . statement NEWLINE programme
    (3) statement -> . expression SEMICOLON
    (4) expression -> . AUTHOR PARANTHESIS_OPEN IDENTIFIER PARANTHESIS_CLOSE
    (5) expression -> . DATE PARANTHESIS_OPEN IDENTIFIER PARANTHESIS_CLOSE
    (6) expression -> . TITLE PARANTHESIS_OPEN IDENTIFIER PARANTHESIS_CLOSE
    (7) expression -> . IMG PARANTHESIS_OPEN IDENTIFIER PARANTHESIS_CLOSE
    (8) expression -> . S PARANTHESIS_OPEN IDENTIFIER PARANTHESIS_CLOSE
    (9) expression -> . SS PARANTHESIS_OPEN IDENTIFIER PARANTHESIS_CLOSE
    (10) expression -> . C PARANTHESIS_OPEN IDENTIFIER PARANTHESIS_CLOSE
    (11) expression -> . MARGE PARANTHESIS_OPEN IDENTIFIER PARANTHESIS_CLOSE
    (12) expression -> . FILENAME PARANTHESIS_OPEN IDENTIFIER PARANTHESIS_CLOSE

    $end            reduce using rule 1 (programme -> statement NEWLINE .)
    AUTHOR          shift and go to state 4
    DATE            shift and go to state 5
    TITLE           shift and go to state 6
    IMG             shift and go to state 7
    S               shift and go to state 8
    SS              shift and go to state 9
    C               shift and go to state 10
    MARGE           shift and go to state 11
    FILENAME        shift and go to state 12

    statement                      shift and go to state 2
    programme                      shift and go to state 24
    expression                     shift and go to state 3

state 14

    (3) statement -> expression SEMICOLON .

    NEWLINE         reduce using rule 3 (statement -> expression SEMICOLON .)


state 15

    (4) expression -> AUTHOR PARANTHESIS_OPEN . IDENTIFIER PARANTHESIS_CLOSE

    IDENTIFIER      shift and go to state 25


state 16

    (5) expression -> DATE PARANTHESIS_OPEN . IDENTIFIER PARANTHESIS_CLOSE

    IDENTIFIER      shift and go to state 26


state 17

    (6) expression -> TITLE PARANTHESIS_OPEN . IDENTIFIER PARANTHESIS_CLOSE

    IDENTIFIER      shift and go to state 27


state 18

    (7) expression -> IMG PARANTHESIS_OPEN . IDENTIFIER PARANTHESIS_CLOSE

    IDENTIFIER      shift and go to state 28


state 19

    (8) expression -> S PARANTHESIS_OPEN . IDENTIFIER PARANTHESIS_CLOSE

    IDENTIFIER      shift and go to state 29


state 20

    (9) expression -> SS PARANTHESIS_OPEN . IDENTIFIER PARANTHESIS_CLOSE

    IDENTIFIER      shift and go to state 30


state 21

    (10) expression -> C PARANTHESIS_OPEN . IDENTIFIER PARANTHESIS_CLOSE

    IDENTIFIER      shift and go to state 31


state 22

    (11) expression -> MARGE PARANTHESIS_OPEN . IDENTIFIER PARANTHESIS_CLOSE

    IDENTIFIER      shift and go to state 32


state 23

    (12) expression -> FILENAME PARANTHESIS_OPEN . IDENTIFIER PARANTHESIS_CLOSE

    IDENTIFIER      shift and go to state 33


state 24

    (2) programme -> statement NEWLINE programme .

    $end            reduce using rule 2 (programme -> statement NEWLINE programme .)


state 25

    (4) expression -> AUTHOR PARANTHESIS_OPEN IDENTIFIER . PARANTHESIS_CLOSE

    PARANTHESIS_CLOSE shift and go to state 34


state 26

    (5) expression -> DATE PARANTHESIS_OPEN IDENTIFIER . PARANTHESIS_CLOSE

    PARANTHESIS_CLOSE shift and go to state 35


state 27

    (6) expression -> TITLE PARANTHESIS_OPEN IDENTIFIER . PARANTHESIS_CLOSE

    PARANTHESIS_CLOSE shift and go to state 36


state 28

    (7) expression -> IMG PARANTHESIS_OPEN IDENTIFIER . PARANTHESIS_CLOSE

    PARANTHESIS_CLOSE shift and go to state 37


state 29

    (8) expression -> S PARANTHESIS_OPEN IDENTIFIER . PARANTHESIS_CLOSE

    PARANTHESIS_CLOSE shift and go to state 38


state 30

    (9) expression -> SS PARANTHESIS_OPEN IDENTIFIER . PARANTHESIS_CLOSE

    PARANTHESIS_CLOSE shift and go to state 39


state 31

    (10) expression -> C PARANTHESIS_OPEN IDENTIFIER . PARANTHESIS_CLOSE

    PARANTHESIS_CLOSE shift and go to state 40


state 32

    (11) expression -> MARGE PARANTHESIS_OPEN IDENTIFIER . PARANTHESIS_CLOSE

    PARANTHESIS_CLOSE shift and go to state 41


state 33

    (12) expression -> FILENAME PARANTHESIS_OPEN IDENTIFIER . PARANTHESIS_CLOSE

    PARANTHESIS_CLOSE shift and go to state 42


state 34

    (4) expression -> AUTHOR PARANTHESIS_OPEN IDENTIFIER PARANTHESIS_CLOSE .

    SEMICOLON       reduce using rule 4 (expression -> AUTHOR PARANTHESIS_OPEN IDENTIFIER PARANTHESIS_CLOSE .)


state 35

    (5) expression -> DATE PARANTHESIS_OPEN IDENTIFIER PARANTHESIS_CLOSE .

    SEMICOLON       reduce using rule 5 (expression -> DATE PARANTHESIS_OPEN IDENTIFIER PARANTHESIS_CLOSE .)


state 36

    (6) expression -> TITLE PARANTHESIS_OPEN IDENTIFIER PARANTHESIS_CLOSE .

    SEMICOLON       reduce using rule 6 (expression -> TITLE PARANTHESIS_OPEN IDENTIFIER PARANTHESIS_CLOSE .)


state 37

    (7) expression -> IMG PARANTHESIS_OPEN IDENTIFIER PARANTHESIS_CLOSE .

    SEMICOLON       reduce using rule 7 (expression -> IMG PARANTHESIS_OPEN IDENTIFIER PARANTHESIS_CLOSE .)


state 38

    (8) expression -> S PARANTHESIS_OPEN IDENTIFIER PARANTHESIS_CLOSE .

    SEMICOLON       reduce using rule 8 (expression -> S PARANTHESIS_OPEN IDENTIFIER PARANTHESIS_CLOSE .)


state 39

    (9) expression -> SS PARANTHESIS_OPEN IDENTIFIER PARANTHESIS_CLOSE .

    SEMICOLON       reduce using rule 9 (expression -> SS PARANTHESIS_OPEN IDENTIFIER PARANTHESIS_CLOSE .)


state 40

    (10) expression -> C PARANTHESIS_OPEN IDENTIFIER PARANTHESIS_CLOSE .

    SEMICOLON       reduce using rule 10 (expression -> C PARANTHESIS_OPEN IDENTIFIER PARANTHESIS_CLOSE .)


state 41

    (11) expression -> MARGE PARANTHESIS_OPEN IDENTIFIER PARANTHESIS_CLOSE .

    SEMICOLON       reduce using rule 11 (expression -> MARGE PARANTHESIS_OPEN IDENTIFIER PARANTHESIS_CLOSE .)


state 42

    (12) expression -> FILENAME PARANTHESIS_OPEN IDENTIFIER PARANTHESIS_CLOSE .

    SEMICOLON       reduce using rule 12 (expression -> FILENAME PARANTHESIS_OPEN IDENTIFIER PARANTHESIS_CLOSE .)

